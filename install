#! /bin/bash

time_stamp=$(date +%Y%m%d_%H%M%S)


# Function to create symbolic link and made a backup if target exists
link_file() {
  source="$1"
  target="$2"
  if [[ -e "$target" ]] && [[ ! -L "$target" ]]; then
    echo "Creating backup for $target: $target.$time_stamp.bak"
    mv -f "$target" "$target.$time_stamp.bak"
  elif [[ -L "$target" ]]; then
    rm "$target"
  fi
  echo "Linking $source to $target"
  ln -sf "$source" "$target"
}


# Switch to the dotfiles directory
BASEDIR=$(cd "$(dirname "$0")"; pwd)
cd "$BASEDIR"


# Check if git exists
if ! git rev-parse --git-dir > /dev/null 2>&1; then
  echo "Error: can't find git."
  exit -1
fi


# Update git submodules
echo "Updating git submodules..."

git submodule init
git submodule update


# Create symbolic links for dotfiles
echo "Linking all dotfiles..."

for i in _*
do
  source="$BASEDIR/$i"
  target="$HOME/${i/_/.}"
  link_file "$source" "$target"
done


# Create symbolic links for Sublime Text 2
if [[ -e "$BASEDIR/subl2" ]]; then
  source="$BASEDIR/subl2"
  if [[ $(uname) == "Darwin" ]]; then
    test ! -e "$HOME/Library/Application Support/Sublime Text 2/Packages" && mkdir -p "$HOME/Library/Application Support/Sublime Text 2/Packages"
    target="$HOME/Library/Application Support/Sublime Text 2/Packages/User"
  else
    test ! -e "$HOME/.config/sublime-text-2/Packages" && mkdir -p "$HOME/.config/sublime-text-2/Packages"
    target="$HOME/.config/sublime-text-2/Packages/User"
  fi
  if [[ -e "$target" ]]; then
    echo "Backing up old settings for subl2 ..."
    mv -f "$target" "$target.$time_stamp.bak"
  fi
  echo "Restoring subl2 settings to $target"
  cp -rf "$source" "$target"
fi


# Create symbolic links for Sublime Text 3
if [[ -e "$BASEDIR/subl3" ]]; then
  source="$BASEDIR/subl3"
  if [[ $(uname) == "Darwin" ]]; then
    test ! -e "$HOME/Library/Application Support/Sublime Text 3/Packages" && mkdir -p "$HOME/Library/Application Support/Sublime Text 3/Packages"
    target="$HOME/Library/Application Support/Sublime Text 3/Packages/User"
  else
    test ! -e "$HOME/.config/sublime-text-3/Packages" && mkdir -p "$HOME/.config/sublime-text-3/Packages"
    target="$HOME/.config/sublime-text-3/Packages/User"
  fi
  link_file "$source" "$target"
fi


# Deal with secret files
if [[ -e "$BASEDIR/secret" ]]; then

  echo "Chmod..."
  chmod -R o-r "$BASEDIR/secret"
  chmod -R o-w "$BASEDIR/secret"
  chmod -R o-x "$BASEDIR/secret"
  chmod -R g-r "$BASEDIR/secret"
  chmod -R g-w "$BASEDIR/secret"
  chmod -R g-x "$BASEDIR/secret"

  echo "Copying private profiles..."

  if [[ -e "$BASEDIR/secret/subl2" ]]; then
    source="$BASEDIR/secret/subl2/*"
    if [[ $(uname) == "Darwin" ]]; then
      test ! -e "$HOME/Library/Application Support/Sublime Text 2/Packages" && mkdir -p "$HOME/Library/Application Support/Sublime Text 2/Packages/User"
      target="$HOME/Library/Application Support/Sublime Text 2/Packages/User"
    else
      test ! -e "$HOME/.config/sublime-text-2/Packages" && mkdir -p "$HOME/.config/sublime-text-2/Packages/User"
      target="$HOME/.config/sublime-text-2/Packages/User"
    fi
    cp -f "$source" "$target/"
  fi

  if [[ -e "$BASEDIR/secret/subl3" ]]; then
    source="$BASEDIR/secret/subl3/*"
      if [[ $(uname) == "Darwin" ]]; then
        test ! -e "$HOME/Library/Application Support/Sublime Text 3/Packages" && mkdir -p "$HOME/Library/Application Support/Sublime Text 3/Packages/User"
        target="$HOME/Library/Application Support/Sublime Text 3/Packages/User"
      else
        test ! -e "$HOME/.config/sublime-text-3/Packages" && mkdir -p "$HOME/.config/sublime-text-3/Packages/User"
        target="$HOME/.config/sublime-text-3/Packages/User"
      fi
      cp -f "$source" "$target/"
  fi

  if [[ -e "$BASEDIR/secret/gitcfg" ]]; then
    source="$BASEDIR/secret/gitcfg"
    test ! -e "$HOME/.config" && mkdir -p "$HOME/.config"
    target="$HOME/.config/gitcfg"
    if [[ -e "$target" ]]; then
      mv -f "$target" "$target.$time_stamp.bak"
    fi
    cp -rf "$source" "$target"
  fi

  echo "Linking secret dotfiles..."
  for i in secret/_*
  do
    source="$BASEDIR/$i"
    target="$HOME/${i/secret\/_/.}"
    link_file "$source" "$target"
  done
fi


# Done
echo "Done."
